     - name: Create EC2 instance/s
       ec2:
         aws_access_key: "{{ ec2_access_key }}"
         aws_secret_key: "{{ ec2_secret_key }}"
         id: "{{ ec2_launch_id | default(omit) }}"
         count: "{{ ec2_launch_count | default(omit) }}"
         #exact_count: "{{ ec2_launch_exact_count | default(omit) }}"
         count_tag: "{{ ec2_launch_count_tag | default(omit) }}"
         image: "{{ ec2_launch_image }}"
         group: "{{ ec2_launch_groups | default(omit) }}"
         instance_tags:
                   name: "{{ ec2_launch_tag_name | default(omit) }}"
                   class: "{{ ec2_launch_tag_class | default(omit) }}"
         instance_type: "{{ ec2_launch_instance_type }}"
         key_name: "{{ ec2_launch_key_name | default(omit) }}"
         wait: True
         region: "{{ ec2_launch_region }}"
         state: "{{ ec2_launch_state | default(omit) }}"
       register: ec2_launch

     - name: The following instances have been launched
       debug:
          var: ec2_launch

#     - name: Add newly created instances to the hosts with add_host
#       add_host:
#            name: "{{ item.public_ip }} {{ hoststring }}"
#            groups: launched
#       with_items: "{{ ec2_launch.instances }}"


     - name: Add newly created instances to the hosts for the next play
       lineinfile: 
                dest: "{{ hostpath }}"
                regexp:  "{{ item.public_ip }}"
                insertafter: "[launched]"
                line:  "{{ item.public_ip }} {{ hoststring }}"
                state: present
       with_items: "{{ ec2_launch.instances }}"

     - wait_for: 
             path: "{{ hostpath }}" 
             search_regex: "{{hoststring}}"

     - name: Wait for instance/s to come up
       wait_for:
          host: "{{ item.public_ip }}"
          port: 22
          search_regex: "OpenSSH"
          timeout: 90
          delay: 20
       when: item.state == "running"
       with_items: "{{ ec2_launch.instances }}"

